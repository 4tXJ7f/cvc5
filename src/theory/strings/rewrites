(define-rule str-eq-refl ((t String)) (= t t) true)
(define-rule str-eq-symm ((t String) (s String)) (= t s) (= s t))
(define-rule substr-empty-str ((n Int) (m Int)) (str.substr "" n m) "")

(define-cond-rule str-len-replace-inv ((t String) (s String) (r String)) 
  (= (str.len s) (str.len r))
  (str.len (str.replace t s r))
  (str.len t))

(define-rule re-in-empty ((t String)) (str.in_re t re.none) false)
(define-rule re-in-sigma ((t String)) (str.in_re t re.allchar) (= (str.len t) 1))
(define-rule re-in-cstring ((t String) (s String)) (str.in_re t (str.to_re s)) (= t s))
