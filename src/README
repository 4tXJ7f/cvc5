To understand the new proof infrastructre:

PfRule <=> Kind
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/proof_rule.h
ProofNode <=> Node
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/proof_node.h
ProofRuleChecker <=> custom theory type checker
ProofChecker <=> TypeChecker
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/proof_checker.h
ProofNodeManager <=> NodeManager
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/proof_node_manager.h
CDProof
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/proof.h

ProofGenerator
EagerProofGenerator
https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/proof_generator.h

ProofEqEngine <=> EqualityEngine
https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/uf/proof_equality_engine.h

TrustNode
https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/trust_node.h

SkolemManager
https://github.com/ajreynol/CVC4/blob/stringsPf/src/expr/skolem_manager.h


// Specific checkers and proof_kinds

https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/builtin/proof_checker.h

https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/booleans/proof_checker.h

https://github.com/ajreynol/CVC4/blob/stringsPf/src/theory/uf/proof_checker.h



High level changes needed:

- Theory use trustedLemma / trustedConflict.
- TheoryEngine owns a ProofChecker that can check any kind of proof in proof_kinds files.
- Based on proof_kinds, we auto-generate:
--- The PfRule enumeration,
--- Printing for PfRule,
--- Initialization of the ProofChecker owned by TheoryEngine,
--- The code for checking (?) Probably only for rewrites

Notes:
- Theory does not need to be concerned what a ProofNode is. It manages TrustNode objects but doesnt care about their contents.
- Similar to above, the user of a ProofEqEngine does not care about what a ProofNode is. Its input interface is similar to EqualityEngine, i.e. Node, its output interface is in terms of TrustNode.
- Theory can have as many ProofGenerator objects as it wants. It should have one for each kind of reasoning it does.
- ProofNodeManager does not need to be global.

PR finished:

(0) Add proof option
(1) Add ProofNode printing as dag via SExpr
(2) Strings solver state minor update
(3) string rewrite for re inclusion
(4) SkolemManager (previously ProofSkolemCache)
(5) ProofChecker improve tracing, features
(7) strings SkolemCache uses SkolemManager (req 4)
(8) refactor mkSkolemExists
(9) Proof step buffer (req 5)
(10) Update CDProof (req 9, 16)
(11) ProofGenerator (req 10)
(12) Add TrustNode (req 11)
(13) Add EagerProofGenerator (req 11, 12)
(14) Builtin rules, builtin checker (req 5)
(15) Boolean rules, boolean checker [Haniel] (req 5)
(16) UF rules, UF checker [Haniel] (req 5)
(18) Add LazyCDProof (req 11)
(19) ProofNode update, refactor free assumptions via proof_node_algorithm
(21) static strings preprocess reduce (req 7)
(22) Strings base solver update (req 2)
(23) Updates to proof node manager, including mkScope (req 19)
(25) Arithmetic proof checker [Alex]
(27) split theory engine
(28) ProofSkolemCache -> SkolemManager
(32) Add trustedConflict/trustedLemma to output channel (req 0, 12, 27)
(33) split operator elimination from arith (req 28)
(34) theory proof step buffer
(35) Strings term registry update (req 13)
(36) term conversion proof generator
(38) quantifiers proof checker (req 8)
(48) remove snorm option
(49) re elim static
(51) TrustNode rewrite kind
(60) proof node updater utility (req 23)
(61) witness rewrite
(62) update proof checker for Skolem forms
(64) updates to SkolemManager

PRs ready:

(6) Equality engine updates [Haniel] (req 0)
(17) rewriter new infrastructure "rewriteEqualityExt"
(37) Rewriter proof producing + unit test [Andres] (req 36)
(39) Theory interface update for TrustNode, ProofChecker (req 27, 51) *
(40) theory engine proof generator (req 11, 13, 18, 23) *
(45) regexp operation refactor (req 3, 7, 8) *
(50) term formula removal proof producing (req 36, 38, 51, 64) *
(59) updates to TConvGenerator for ONCE policy
(65) updates to strings core solver *

PRs future:

(20) Eq proof conversion [Haniel] (req 6)
(24) ProofEqEngine (req 10, 11, 12, 18, 20, 23)
(26) strings infer info update "noExplain", all calls to InferenceManager (req 22, 35, 65)
(29) arithmetic proof producing [Alex] (req 24, 25)
(30) Arithmetic operator elimination proof producing TODO (req 25, 28, 33, 64)
(31) update strings inference manager to use ProofEqEngine (req 24, 26)
(41) SharedTermDatabase uses pfee (req 24)
(42) Strings proof checker (req 5, 17, 22, 45, 65)
(43) strings InferProofCons (req 13, 18, 26, 34, 42, 65)
(44) TheoryEngine explanation proof producing (req 12, 40, 41)
(46) strings term registry proof producing (req 32, 35, 65)
(47) TheoryUF proof producing [Haniel] (req 24, 39)
(52) theory preprocess proof producing (req 27, 48, 51, 50)
(53) CNF proof producing [Haniel]
(54) DSL rewrite rule TODO
(55) DSL rewrite rule term processor
(56) DSL rewrite rule database (req 54)
(58) DSL rewrite rule proof generator (req 57)
(63) proof post-processor (req 59)


PRs wish list:

- SAT solver proof producing
- SEXPR simply typed
(56) DSL rewrite rule compilation, including side condition utility [Andres] (req 56)
- Proof kinds infrastructure?
- SMT engine proof postprocessor (req 60)
